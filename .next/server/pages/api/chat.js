"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/chat.js */ \"(api-node)/./pages/api/chat.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGY2hhdCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGY2hhdC5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUNnRDtBQUNoRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsK0NBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLCtDQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2NoYXQuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXRcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/chat.js":
/*!***************************!*\
  !*** ./pages/api/chat.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _llm_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./llm-utils */ \"(api-node)/./pages/api/llm-utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_llm_utils__WEBPACK_IMPORTED_MODULE_0__]);\n_llm_utils__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        res.status(405).json({\n            error: 'Method not allowed'\n        });\n        return;\n    }\n    const { message, language = 'en', provider = 'openai', model = 'gpt-4o' } = req.body;\n    if (!message) {\n        res.status(400).json({\n            error: 'Message is required'\n        });\n        return;\n    }\n    try {\n        // Use our implementation with specified model and provider\n        const legalResponse = await (0,_llm_utils__WEBPACK_IMPORTED_MODULE_0__.generateLegalResponse)(message, language, provider, model);\n        res.status(200).json({\n            message: legalResponse\n        });\n    } catch (error) {\n        console.error('Error in chat API:', error);\n        res.status(500).json({\n            error: 'Failed to get response from the legal assistant',\n            details: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9jaGF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9EO0FBRXJDLGVBQWVDLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QkQsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXFCO1FBQ25EO0lBQ0Y7SUFFQSxNQUFNLEVBQ0pDLE9BQU8sRUFDUEMsV0FBVyxJQUFJLEVBQ2ZDLFdBQVcsUUFBUSxFQUNuQkMsUUFBUSxRQUFRLEVBQ2pCLEdBQUdULElBQUlVLElBQUk7SUFFWixJQUFJLENBQUNKLFNBQVM7UUFDWkwsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQXNCO1FBQ3BEO0lBQ0Y7SUFFQSxJQUFJO1FBQ0YsMkRBQTJEO1FBQzNELE1BQU1NLGdCQUFnQixNQUFNYixpRUFBcUJBLENBQUNRLFNBQVNDLFVBQVVDLFVBQVVDO1FBRS9FUixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVFLFNBQVNLO1FBQWM7SUFDaEQsRUFBRSxPQUFPTixPQUFPO1FBQ2RPLFFBQVFQLEtBQUssQ0FBQyxzQkFBc0JBO1FBQ3BDSixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxPQUFPO1lBQ1BRLFNBQVNSLE1BQU1DLE9BQU87UUFDeEI7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3BhZ2VzL2FwaS9jaGF0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlTGVnYWxSZXNwb25zZSB9IGZyb20gJy4vbGxtLXV0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBlcnJvcjogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgeyBcbiAgICBtZXNzYWdlLCBcbiAgICBsYW5ndWFnZSA9ICdlbicsXG4gICAgcHJvdmlkZXIgPSAnb3BlbmFpJyxcbiAgICBtb2RlbCA9ICdncHQtNG8nXG4gIH0gPSByZXEuYm9keTtcblxuICBpZiAoIW1lc3NhZ2UpIHtcbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnTWVzc2FnZSBpcyByZXF1aXJlZCcgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdHJ5IHtcbiAgICAvLyBVc2Ugb3VyIGltcGxlbWVudGF0aW9uIHdpdGggc3BlY2lmaWVkIG1vZGVsIGFuZCBwcm92aWRlclxuICAgIGNvbnN0IGxlZ2FsUmVzcG9uc2UgPSBhd2FpdCBnZW5lcmF0ZUxlZ2FsUmVzcG9uc2UobWVzc2FnZSwgbGFuZ3VhZ2UsIHByb3ZpZGVyLCBtb2RlbCk7XG4gICAgXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiBsZWdhbFJlc3BvbnNlIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGNoYXQgQVBJOicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxuICAgICAgZXJyb3I6ICdGYWlsZWQgdG8gZ2V0IHJlc3BvbnNlIGZyb20gdGhlIGxlZ2FsIGFzc2lzdGFudCcsXG4gICAgICBkZXRhaWxzOiBlcnJvci5tZXNzYWdlXG4gICAgfSk7XG4gIH1cbn0iXSwibmFtZXMiOlsiZ2VuZXJhdGVMZWdhbFJlc3BvbnNlIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJsYW5ndWFnZSIsInByb3ZpZGVyIiwibW9kZWwiLCJib2R5IiwibGVnYWxSZXNwb25zZSIsImNvbnNvbGUiLCJkZXRhaWxzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/chat.js\n");

/***/ }),

/***/ "(api-node)/./pages/api/llm-utils.js":
/*!********************************!*\
  !*** ./pages/api/llm-utils.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateLegalResponse: () => (/* binding */ generateLegalResponse),\n/* harmony export */   transcribeAudio: () => (/* binding */ transcribeAudio)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY;\n// API keys for alternative providers\nconst ANTHROPIC_API_KEY = process.env.ANTHROPIC_API_KEY; // For Qwen models (using Anthropic/Claude)\nconst XAI_API_KEY = process.env.XAI_API_KEY; // For Llama models (using xAI API)\n// Default model to use - can be changed based on user preference or configuration\nconst DEFAULT_MODEL = 'openai/gpt-4o';\n/**\n * LLM Service that can support multiple AI model providers\n */ class LLMService {\n    constructor(provider = 'openai', model = 'gpt-4o'){\n        this.provider = provider;\n        this.model = model;\n        // Validate provider and model\n        if (!this.isValidModel(provider, model)) {\n            console.warn(`Unsupported model ${provider}/${model}, falling back to default`);\n            [this.provider, this.model] = DEFAULT_MODEL.split('/');\n        }\n    }\n    /**\n   * Check if a provider/model combination is valid and supported\n   */ isValidModel(provider, model) {\n        const supportedModels = {\n            'openai': [\n                'gpt-4o',\n                'gpt-4',\n                'gpt-3.5-turbo'\n            ],\n            'qwen': [\n                'qwen2.5-32b',\n                'qwen2.5-7b'\n            ],\n            'huggingface': [\n                'llama-3-70b',\n                'llama-3-8b'\n            ]\n        };\n        return supportedModels[provider] && supportedModels[provider].includes(model);\n    }\n    /**\n   * Generate a response from the selected LLM provider\n   */ async generateResponse(prompt, systemPrompt = 'You are a helpful assistant.') {\n        switch(this.provider){\n            case 'openai':\n                return this.callOpenAI(prompt, systemPrompt);\n            case 'qwen':\n                if (ANTHROPIC_API_KEY) {\n                    return this.callAnthropic(prompt, systemPrompt);\n                } else {\n                    console.warn('Anthropic API key not available for Qwen, using OpenAI fallback');\n                    return this.callOpenAI(prompt, systemPrompt);\n                }\n            case 'huggingface':\n                if (XAI_API_KEY) {\n                    return this.callXAI(prompt, systemPrompt);\n                } else {\n                    console.warn('xAI API key not available for Llama, using OpenAI fallback');\n                    return this.callOpenAI(prompt, systemPrompt);\n                }\n            default:\n                return this.callOpenAI(prompt, systemPrompt);\n        }\n    }\n    /**\n   * Call OpenAI API to generate a response\n   */ async callOpenAI(prompt, systemPrompt) {\n        try {\n            if (!OPENAI_API_KEY) {\n                throw new Error('OpenAI API key is required');\n            }\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('https://api.openai.com/v1/chat/completions', {\n                model: this.model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: systemPrompt\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                temperature: 0.7,\n                max_tokens: 800\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${OPENAI_API_KEY}`\n                }\n            });\n            if (response.data && response.data.choices && response.data.choices.length > 0) {\n                return response.data.choices[0].message.content;\n            } else {\n                throw new Error('Unexpected response structure from OpenAI');\n            }\n        } catch (error) {\n            console.error('Error calling OpenAI:', error);\n            if (error.response) {\n                console.error('OpenAI API error:', error.response.data);\n            }\n            throw error;\n        }\n    }\n    /**\n   * Call Anthropic API to generate a response (used for Qwen models)\n   */ async callAnthropic(prompt, systemPrompt) {\n        try {\n            if (!ANTHROPIC_API_KEY) {\n                throw new Error('Anthropic API key is required for Qwen models');\n            }\n            // Map our Qwen model names to Anthropic model names\n            const modelMapping = {\n                'qwen2.5-7b': 'claude-3-haiku-20240307',\n                'qwen2.5-32b': 'claude-3-opus-20240229'\n            };\n            // Use claude-3-sonnet as a default fallback\n            const claudeModel = modelMapping[this.model] || 'claude-3-sonnet-20240229';\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('https://api.anthropic.com/v1/messages', {\n                model: claudeModel,\n                system: systemPrompt,\n                messages: [\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                temperature: 0.7,\n                max_tokens: 800\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-api-key': ANTHROPIC_API_KEY,\n                    'anthropic-version': '2023-06-01'\n                }\n            });\n            if (response.data && response.data.content && response.data.content.length > 0) {\n                return response.data.content[0].text;\n            } else {\n                throw new Error('Unexpected response structure from Anthropic');\n            }\n        } catch (error) {\n            console.error('Error calling Anthropic:', error);\n            if (error.response) {\n                console.error('Anthropic API error:', error.response.data);\n            }\n            throw error;\n        }\n    }\n    /**\n   * Call xAI API to generate a response (used for Llama models)\n   */ async callXAI(prompt, systemPrompt) {\n        try {\n            if (!XAI_API_KEY) {\n                throw new Error('xAI API key is required for Llama models');\n            }\n            // Map our Llama model names to xAI/Grok model names\n            const modelMapping = {\n                'llama-3-8b': 'grok-1',\n                'llama-3-70b': 'grok-1.5-pro'\n            };\n            // Use grok-1 as default fallback\n            const xaiModel = modelMapping[this.model] || 'grok-1';\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('https://api.x.ai/v1/chat/completions', {\n                model: xaiModel,\n                messages: [\n                    {\n                        role: 'system',\n                        content: systemPrompt\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                temperature: 0.7,\n                max_tokens: 800\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${XAI_API_KEY}`\n                }\n            });\n            if (response.data && response.data.choices && response.data.choices.length > 0) {\n                return response.data.choices[0].message.content;\n            } else {\n                throw new Error('Unexpected response structure from xAI');\n            }\n        } catch (error) {\n            console.error('Error calling xAI:', error);\n            if (error.response) {\n                console.error('xAI API error:', error.response.data);\n            }\n            throw error;\n        }\n    }\n}\n// This function generates a response from the selected LLM based on the user's query\nasync function generateLegalResponse(query, languageCode = 'en', provider = 'openai', model = 'gpt-4o') {\n    try {\n        // Use our Python RAG system to retrieve relevant context for the query\n        let relevantContext = \"\";\n        try {\n            // Dynamically import the child_process module to spawn a Python process\n            const { spawn } = __webpack_require__(/*! child_process */ \"child_process\");\n            // Execute the Python script to retrieve context from our RAG system\n            const pythonProcess = spawn('python', [\n                path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), 'utils/retrieve_context.py'),\n                query\n            ]);\n            // Collect the output from the Python script\n            let contextData = '';\n            pythonProcess.stdout.on('data', (data)=>{\n                contextData += data.toString();\n            });\n            // Wait for the process to complete\n            await new Promise((resolve, reject)=>{\n                pythonProcess.on('close', (code)=>{\n                    if (code === 0) {\n                        resolve();\n                    } else {\n                        console.warn(`Python process exited with code ${code}`);\n                        resolve(); // Continue even if there's an error\n                    }\n                });\n            });\n            // Use the retrieved context if available\n            if (contextData.trim()) {\n                relevantContext = contextData.trim();\n            } else {\n                // Fallback to a basic context if RAG retrieval failed\n                relevantContext = `\n        The Indian Penal Code (IPC) is the official criminal code of India that covers all substantive aspects of criminal law. \n        It was drafted in 1860 and came into force in 1862.\n        Section 299 and 300 deal with culpable homicide and murder.\n        Section 375 covers sexual assault.\n        Section 378 covers theft.\n        Section 415 covers fraud and cheating.\n        It applies to the whole of India, except Jammu and Kashmir.\n        `;\n            }\n        } catch (err) {\n            console.warn('Failed to retrieve context from RAG system:', err);\n            // Fallback to a basic context if RAG retrieval failed\n            relevantContext = `\n      The Indian Penal Code (IPC) is the official criminal code of India that covers all substantive aspects of criminal law. \n      It was drafted in 1860 and came into force in 1862.\n      Section 299 and 300 deal with culpable homicide and murder.\n      Section 375 covers sexual assault.\n      Section 378 covers theft.\n      Section 415 covers fraud and cheating.\n      It applies to the whole of India, except Jammu and Kashmir.\n      `;\n        }\n        // Construct the prompt with legal context for better responses\n        const prompt = `\n    You are a legal assistant for Indian law. Answer the following query based on your knowledge of Indian law. \n    If information is not available in the provided context, answer based on your general knowledge of Indian law, \n    but clearly indicate when you're going beyond the provided information.\n    \n    Context:\n    ${relevantContext}\n    \n    Query: ${query}\n    \n    Provide a helpful, accurate, and clear response in ${languageCode === 'en' ? 'English' : 'Hindi'}.\n    `;\n        const systemPrompt = 'You are a helpful legal assistant specializing in Indian law.';\n        // Create an instance of the LLM service with the specified provider and model\n        const llmService = new LLMService(provider, model);\n        // Check if we need to request additional API keys\n        if (provider === 'qwen' && !process.env.ANTHROPIC_API_KEY || provider === 'huggingface' && !process.env.XAI_API_KEY) {\n            console.warn(`${provider} API key not found, falling back to OpenAI`);\n            // Fallback to OpenAI if the required API key is not available\n            return await new LLMService('openai', 'gpt-4o').generateResponse(prompt, systemPrompt);\n        }\n        // Generate response using the selected LLM\n        return await llmService.generateResponse(prompt, systemPrompt);\n    } catch (error) {\n        console.error('Error generating legal response:', error);\n        throw error;\n    }\n}\n// This function would transcribe audio using OpenAI Whisper API\nasync function transcribeAudio(audioBuffer) {\n    try {\n        if (!OPENAI_API_KEY) {\n            throw new Error('OpenAI API key is required');\n        }\n        // Create FormData object for the API request\n        const formData = new FormData();\n        formData.append('file', new Blob([\n            audioBuffer\n        ], {\n            type: 'audio/wav'\n        }), 'audio.wav');\n        formData.append('model', 'whisper-1');\n        formData.append('language', 'en'); // Can be adjusted based on user's language setting\n        // Call OpenAI's Audio API for transcription\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post('https://api.openai.com/v1/audio/transcriptions', formData, {\n            headers: {\n                'Authorization': `Bearer ${OPENAI_API_KEY}`,\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n        if (response.data && response.data.text) {\n            return response.data.text;\n        } else {\n            throw new Error('Unexpected response structure from OpenAI Whisper API');\n        }\n    } catch (error) {\n        console.error('Error transcribing audio:', error);\n        if (error.response) {\n            console.error('OpenAI API error:', error.response.data);\n        }\n        throw error;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/llm-utils.js\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();